local speed = 500

function init(self)
	msg.post(".", "acquire_input_focus")

	self.movement = false
	self.direction = vmath.vector3()
	self.jump = true
	self.current_animation = "chara_still_right"
	--msg.post("camera", "follow")
	--self.follow = true
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	self.previous_pos = go.get_position()
	self.pos = go.get_position()
	-- means player can't go out of bounds
	if self.pos.x < 0 then
		self.pos.x = 0
	end
	if self.pos.y > 640 then
		self.pos.y = 640
	end
	if self.pos.y < 0 then
		self.pos.y = 0
		self.direction.y = 0
		self.jump = true
	end
	if self.pos.x > 1280 then
		msg.post("game:/level_controller", "next_level")
	end
	--[[if self.direction.x > 0 and self.movement == false then
		self.next_animation = hash("chara_still_right")

	elseif self.direction.x < 0 and self.movement == false then
		self.next_animation = hash("chara_still_left")
	end
	--]]
	go.set_position(self.pos + self.direction * dt * speed)

	--[[if self.next_animation ~= self.current_animation then
		msg.post("#player", "play_animation", {id = self.next_animation})
		self.current_animation = self.next_animation
	end6
	--]]
	self.direction.x = 0

	if self.jump == false then
		self.jump_height = self.jump_height-1
		if self.jump_height == 0 then
			self.direction.y = -1
		end
	end
end

local function Hit_wall(self)
	go.set_position(self.previous_pos)
		self.jump = true
		self.direction.y = 0 
end
local function Fall(self) 
	if self.jump == true then
		self.direction.y = -1 
	end
end
function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		-- check if we received a contact point message. One message for each contact point
		if message.group == hash("wall") then
			Hit_wall(self)
		end
		if message.group == hash("fall") then
			Fall(self)
		end
	end
end

function on_input(self, action_id, action)
	--[[if action.pressed then
		self.follow = not self.follow
		if self.follow then
			msg.post("camera", "follow")
		else
			msg.post("camera", "unfollow")
		end--]]
	--end
	if action_id == hash("chara_jump") or action_id == hash("touch") then
		if self.jump == true then
			self.jump_height = 25
			self.direction.y = 1
			self.jump = false
		end
	elseif action_id == hash("chara_left") then
		self.direction.x = -1
		self.next_animation = hash("chara_left")
		self.movement = true
	elseif action_id == hash("chara_down") then
		self.direction.y = -1
	elseif action_id == hash("chara_right") then
		self.direction.x = 1
		self.next_animation = hash("chara_right")
		self.movement = true
	elseif action_id == hash("Player_leave") then
		msg.post("game:/level_controller", "show_select")
	end

	if action.released then
		self.movement = false
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
